name: Publish to npm on PR merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  publish:
    if: github.event.pull_request.merged == true
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9

      # - name: Install dependencies
      #   run: pnpm install --frozen-lockfile --strict-peer-dependencies

      # - name: Build package
      #   run: pnpm run build

      # Клонування гілки master
      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      # Бампання версії
      - name: Bump Version
        env:
          LABELS: ${{ join(github.event.pull_request.labels.*.name, ',') }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          # Отримання міток з початкового ПР
          LABELS=$(echo '${{ toJson(github.event.pull_request.labels) }}')
          echo "Labels: $LABELS"

          if [[ "$LABELS" == *"major-version"* ]]; then
            pnpm run bumpManifestVer major
          elif [[ "$LABELS" == *"minor-version"* ]]; then
            pnpm run bumpManifestVer minor
          else
            pnpm run bumpManifestVer
          fi

          # Коміт змін
          git add .
          git commit -m "Bump version"

      # Пуш змін у нову гілку
      - name: Push changes to new branch
        run: |
          BRANCH_NAME="version-bump-${{ github.run_id }}"
          git push origin HEAD:$BRANCH_NAME

      # Створення нового ПР
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const branchName = 'version-bump-${{ github.run_id }}';
            const { data: pr } = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Version bump after merging PR #${{ github.event.pull_request.number }}',
              head: branchName,
              base: 'main',

              body: 'Цей ПР створено автоматично для бампання версії після злиття ПР #${{ github.event.pull_request.number }}.',
            });
            core.setOutput('pr_number', pr.number);

      # - name: Bump Version
      #   env:
      #     LABELS: ${{ join(github.event.pull_request.labels.*.name, ',') }}
      #   run: |
      #     git config --global user.name "git log -1 --pretty=format:%an"
      #     git config --global user.email "$(git log -1 --pretty=format:%ae)"

      #     if [[ "$LABELS" == *"major-version"* ]]; then
      #       npm version major
      #     elif [[ "$LABELS" == *"minor-version"* ]]; then
      #       npm version minor
      #     else
      #       npm version patch
      #     fi

      #     # push bump package version
      #     git push origin HEAD:main

      # - name: Authenticate NPM
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      #   run: echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> .npmrc

      # - name: Publish to npm
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      #   run: pnpm publish --access public
